{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "State",
  "type": "object",
  "required": [
    "fiat_currency",
    "max_amount",
    "min_amount",
    "order_type",
    "owner",
    "state"
  ],
  "properties": {
    "fiat_currency": {
      "$ref": "#/definitions/FiatCurrency"
    },
    "max_amount": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "min_amount": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "order_type": {
      "$ref": "#/definitions/OrderType"
    },
    "owner": {
      "$ref": "#/definitions/CanonicalAddr"
    },
    "state": {
      "$ref": "#/definitions/OrderState"
    }
  },
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "CanonicalAddr": {
      "$ref": "#/definitions/Binary"
    },
    "FiatCurrency": {
      "type": "string",
      "enum": [
        "cop",
        "brl"
      ]
    },
    "OrderState": {
      "type": "string",
      "enum": [
        "active",
        "paused"
      ]
    },
    "OrderType": {
      "type": "string",
      "enum": [
        "buy",
        "sell"
      ]
    }
  }
}
